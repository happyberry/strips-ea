Terminals unused in grammar

   FORALL
   WHEN


Grammar

    0 $accept: start $end

    1 start: list_domain_problem

    2 list_domain_problem: list_domain_problem problem
    3                    | list_domain_problem domain
    4                    | %empty

    5 $@1: %empty

    6 $@2: %empty

    7 $@3: %empty

    8 domain: LEFTPAR DEFINE LEFTPAR DOMAIN NAME RIGHTPAR $@1 LEFTPAR list_def $@2 list_structure_def $@3 RIGHTPAR

    9 list_def: list_def definition LEFTPAR
   10         | definition LEFTPAR

   11 definition: REQUIREMENTS require_def
   12           | TYPES types_def
   13           | CONSTANTS constants_def
   14           | PREDICATES predicates_def

   15 require_def: list_require_key RIGHTPAR

   16 list_require_key: list_require_key require_key
   17                 | require_key

   18 require_key: STRIPS
   19            | TYPING
   20            | EQUALITY
   21            | CONDITIONAL
   22            | DOM_AXIOMS
   23            | DISJUNCTIVE
   24            | ADL
   25            | E_PRECONDITIONS
   26            | U_PRECONDITIONS

   27 types_def: list_name RIGHTPAR

   28 constants_def: list_name RIGHTPAR

   29 list_name: NAME list_name
   30          | NAME

   31 predicates_def: list_atomic_formula_var RIGHTPAR

   32 list_atomic_formula_var: list_atomic_formula_var atomic_formula_var
   33                        | atomic_formula_var

   34 atomic_formula_var: LEFTPAR predicate list_var RIGHTPAR

   35 list_var: variable list_var
   36         | %empty

   37 predicate: NAME
   38          | EQUAL

   39 variable: QUESTION NAME

   40 list_structure_def: list_structure_def LEFTPAR structure_def
   41                   | structure_def

   42 structure_def: action_def

   43 action_def: ACTION NAME list_action_body RIGHTPAR

   44 list_action_body: list_action_body action_body
   45                 | %empty

   46 action_body: PARAMETERS LEFTPAR list_parameters RIGHTPAR
   47            | PRECONDITION goal_description
   48            | EFFECT effect

   49 list_parameters: list_var

   50 goal_description: atomic_formula_term
   51                 | LEFTPAR AND list_goal_description RIGHTPAR
   52                 | LEFTPAR NOT atomic_formula_term RIGHTPAR

   53 list_goal_description: list_goal_description goal_description
   54                      | %empty

   55 atomic_formula_term: LEFTPAR predicate list_term RIGHTPAR

   56 list_term: term list_term
   57          | %empty

   58 term: NAME
   59     | variable

   60 effect: LEFTPAR AND list_effect RIGHTPAR
   61       | LEFTPAR NOT atomic_formula_term RIGHTPAR
   62       | atomic_formula_term

   63 list_effect: list_effect effect
   64            | %empty

   65 $@4: %empty

   66 problem: LEFTPAR DEFINE LEFTPAR PROBLEM NAME RIGHTPAR $@4 list_def_prob RIGHTPAR

   67 list_def_prob: list_def_prob def_prob
   68              | %empty

   69 def_prob: LEFTPAR REQUIREMENTS require_def
   70         | LEFTPAR SITUATION situation_def
   71         | LEFTPAR INIT init_def
   72         | LEFTPAR GOAL goal_def
   73         | LEFTPAR LENGTH length_def
   74         | LEFTPAR TWODOTS DOMAIN NAME RIGHTPAR
   75         | LEFTPAR OBJECTS list_name RIGHTPAR

   76 situation_def: NAME RIGHTPAR

   77 init_def: list_goal_description RIGHTPAR

   78 goal_def: goal_description RIGHTPAR

   79 length_def: list_length_def_aux RIGHTPAR

   80 list_length_def_aux: list_length_def_aux length_def_aux
   81                    | %empty

   82 length_def_aux: LEFTPAR SERIAL number RIGHTPAR
   83               | LEFTPAR PARALLEL number RIGHTPAR

   84 number: INTEGER


Terminals, with rules where they appear

$end (0) 0
error (256)
LEFTPAR (258) 8 9 10 34 40 46 51 52 55 60 61 66 69 70 71 72 73 74 75
    82 83
RIGHTPAR (259) 8 15 27 28 31 34 43 46 51 52 55 60 61 66 74 75 76 77
    78 79 82 83
NAME (260) 8 29 30 37 39 43 58 66 74 76
TWODOTS (261) 74
DEFINE (262) 8 66
DOMAIN (263) 8 74
REQUIREMENTS (264) 11 69
CONSTANTS (265) 13
PREDICATES (266) 14
QUESTION (267) 39
STRIPS (268) 18
EQUALITY (269) 20
CONDITIONAL (270) 21
DOM_AXIOMS (271) 22
DISJUNCTIVE (272) 23
ADL (273) 24
E_PRECONDITIONS (274) 25
U_PRECONDITIONS (275) 26
AND (276) 51 60
NOT (277) 52 61
FORALL (278)
WHEN (279)
EQUAL (280) 38
ACTION (281) 43
PARAMETERS (282) 46
PRECONDITION (283) 47
EFFECT (284) 48
PROBLEM (285) 66
INIT (286) 71
GOAL (287) 72
LENGTH (288) 73
SITUATION (289) 70
OBJECTS (290) 75
SERIAL (291) 82
PARALLEL (292) 83
INTEGER (293) 84
TYPING (294) 19
TYPES (295) 12


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
start (42)
    on left: 1, on right: 0
list_domain_problem (43)
    on left: 2 3 4, on right: 1 2 3
domain (44)
    on left: 8, on right: 3
$@1 (45)
    on left: 5, on right: 8
$@2 (46)
    on left: 6, on right: 8
$@3 (47)
    on left: 7, on right: 8
list_def (48)
    on left: 9 10, on right: 8 9
definition (49)
    on left: 11 12 13 14, on right: 9 10
require_def (50)
    on left: 15, on right: 11 69
list_require_key (51)
    on left: 16 17, on right: 15 16
require_key (52)
    on left: 18 19 20 21 22 23 24 25 26, on right: 16 17
types_def (53)
    on left: 27, on right: 12
constants_def (54)
    on left: 28, on right: 13
list_name (55)
    on left: 29 30, on right: 27 28 29 75
predicates_def (56)
    on left: 31, on right: 14
list_atomic_formula_var (57)
    on left: 32 33, on right: 31 32
atomic_formula_var (58)
    on left: 34, on right: 32 33
list_var (59)
    on left: 35 36, on right: 34 35 49
predicate (60)
    on left: 37 38, on right: 34 55
variable (61)
    on left: 39, on right: 35 59
list_structure_def (62)
    on left: 40 41, on right: 8 40
structure_def (63)
    on left: 42, on right: 40 41
action_def (64)
    on left: 43, on right: 42
list_action_body (65)
    on left: 44 45, on right: 43 44
action_body (66)
    on left: 46 47 48, on right: 44
list_parameters (67)
    on left: 49, on right: 46
goal_description (68)
    on left: 50 51 52, on right: 47 53 78
list_goal_description (69)
    on left: 53 54, on right: 51 53 77
atomic_formula_term (70)
    on left: 55, on right: 50 52 61 62
list_term (71)
    on left: 56 57, on right: 55 56
term (72)
    on left: 58 59, on right: 56
effect (73)
    on left: 60 61 62, on right: 48 63
list_effect (74)
    on left: 63 64, on right: 60 63
problem (75)
    on left: 66, on right: 2
$@4 (76)
    on left: 65, on right: 66
list_def_prob (77)
    on left: 67 68, on right: 66 67
def_prob (78)
    on left: 69 70 71 72 73 74 75, on right: 67
situation_def (79)
    on left: 76, on right: 70
init_def (80)
    on left: 77, on right: 71
goal_def (81)
    on left: 78, on right: 72
length_def (82)
    on left: 79, on right: 73
list_length_def_aux (83)
    on left: 80 81, on right: 79 80
length_def_aux (84)
    on left: 82 83, on right: 80
number (85)
    on left: 84, on right: 82 83


State 0

    0 $accept: . start $end

    $default  reduce using rule 4 (list_domain_problem)

    start                go to state 1
    list_domain_problem  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: list_domain_problem .
    2 list_domain_problem: list_domain_problem . problem
    3                    | list_domain_problem . domain

    LEFTPAR  shift, and go to state 4

    $default  reduce using rule 1 (start)

    domain   go to state 5
    problem  go to state 6


State 3

    0 $accept: start $end .

    $default  accept


State 4

    8 domain: LEFTPAR . DEFINE LEFTPAR DOMAIN NAME RIGHTPAR $@1 LEFTPAR list_def $@2 list_structure_def $@3 RIGHTPAR
   66 problem: LEFTPAR . DEFINE LEFTPAR PROBLEM NAME RIGHTPAR $@4 list_def_prob RIGHTPAR

    DEFINE  shift, and go to state 7


State 5

    3 list_domain_problem: list_domain_problem domain .

    $default  reduce using rule 3 (list_domain_problem)


State 6

    2 list_domain_problem: list_domain_problem problem .

    $default  reduce using rule 2 (list_domain_problem)


State 7

    8 domain: LEFTPAR DEFINE . LEFTPAR DOMAIN NAME RIGHTPAR $@1 LEFTPAR list_def $@2 list_structure_def $@3 RIGHTPAR
   66 problem: LEFTPAR DEFINE . LEFTPAR PROBLEM NAME RIGHTPAR $@4 list_def_prob RIGHTPAR

    LEFTPAR  shift, and go to state 8


State 8

    8 domain: LEFTPAR DEFINE LEFTPAR . DOMAIN NAME RIGHTPAR $@1 LEFTPAR list_def $@2 list_structure_def $@3 RIGHTPAR
   66 problem: LEFTPAR DEFINE LEFTPAR . PROBLEM NAME RIGHTPAR $@4 list_def_prob RIGHTPAR

    DOMAIN   shift, and go to state 9
    PROBLEM  shift, and go to state 10


State 9

    8 domain: LEFTPAR DEFINE LEFTPAR DOMAIN . NAME RIGHTPAR $@1 LEFTPAR list_def $@2 list_structure_def $@3 RIGHTPAR

    NAME  shift, and go to state 11


State 10

   66 problem: LEFTPAR DEFINE LEFTPAR PROBLEM . NAME RIGHTPAR $@4 list_def_prob RIGHTPAR

    NAME  shift, and go to state 12


State 11

    8 domain: LEFTPAR DEFINE LEFTPAR DOMAIN NAME . RIGHTPAR $@1 LEFTPAR list_def $@2 list_structure_def $@3 RIGHTPAR

    RIGHTPAR  shift, and go to state 13


State 12

   66 problem: LEFTPAR DEFINE LEFTPAR PROBLEM NAME . RIGHTPAR $@4 list_def_prob RIGHTPAR

    RIGHTPAR  shift, and go to state 14


State 13

    8 domain: LEFTPAR DEFINE LEFTPAR DOMAIN NAME RIGHTPAR . $@1 LEFTPAR list_def $@2 list_structure_def $@3 RIGHTPAR

    $default  reduce using rule 5 ($@1)

    $@1  go to state 15


State 14

   66 problem: LEFTPAR DEFINE LEFTPAR PROBLEM NAME RIGHTPAR . $@4 list_def_prob RIGHTPAR

    $default  reduce using rule 65 ($@4)

    $@4  go to state 16


State 15

    8 domain: LEFTPAR DEFINE LEFTPAR DOMAIN NAME RIGHTPAR $@1 . LEFTPAR list_def $@2 list_structure_def $@3 RIGHTPAR

    LEFTPAR  shift, and go to state 17


State 16

   66 problem: LEFTPAR DEFINE LEFTPAR PROBLEM NAME RIGHTPAR $@4 . list_def_prob RIGHTPAR

    $default  reduce using rule 68 (list_def_prob)

    list_def_prob  go to state 18


State 17

    8 domain: LEFTPAR DEFINE LEFTPAR DOMAIN NAME RIGHTPAR $@1 LEFTPAR . list_def $@2 list_structure_def $@3 RIGHTPAR

    REQUIREMENTS  shift, and go to state 19
    CONSTANTS     shift, and go to state 20
    PREDICATES    shift, and go to state 21
    TYPES         shift, and go to state 22

    list_def    go to state 23
    definition  go to state 24


State 18

   66 problem: LEFTPAR DEFINE LEFTPAR PROBLEM NAME RIGHTPAR $@4 list_def_prob . RIGHTPAR
   67 list_def_prob: list_def_prob . def_prob

    LEFTPAR   shift, and go to state 25
    RIGHTPAR  shift, and go to state 26

    def_prob  go to state 27


State 19

   11 definition: REQUIREMENTS . require_def

    STRIPS           shift, and go to state 28
    EQUALITY         shift, and go to state 29
    CONDITIONAL      shift, and go to state 30
    DOM_AXIOMS       shift, and go to state 31
    DISJUNCTIVE      shift, and go to state 32
    ADL              shift, and go to state 33
    E_PRECONDITIONS  shift, and go to state 34
    U_PRECONDITIONS  shift, and go to state 35
    TYPING           shift, and go to state 36

    require_def       go to state 37
    list_require_key  go to state 38
    require_key       go to state 39


State 20

   13 definition: CONSTANTS . constants_def

    NAME  shift, and go to state 40

    constants_def  go to state 41
    list_name      go to state 42


State 21

   14 definition: PREDICATES . predicates_def

    LEFTPAR  shift, and go to state 43

    predicates_def           go to state 44
    list_atomic_formula_var  go to state 45
    atomic_formula_var       go to state 46


State 22

   12 definition: TYPES . types_def

    NAME  shift, and go to state 40

    types_def  go to state 47
    list_name  go to state 48


State 23

    8 domain: LEFTPAR DEFINE LEFTPAR DOMAIN NAME RIGHTPAR $@1 LEFTPAR list_def . $@2 list_structure_def $@3 RIGHTPAR
    9 list_def: list_def . definition LEFTPAR

    REQUIREMENTS  shift, and go to state 19
    CONSTANTS     shift, and go to state 20
    PREDICATES    shift, and go to state 21
    TYPES         shift, and go to state 22

    $default  reduce using rule 6 ($@2)

    $@2         go to state 49
    definition  go to state 50


State 24

   10 list_def: definition . LEFTPAR

    LEFTPAR  shift, and go to state 51


State 25

   69 def_prob: LEFTPAR . REQUIREMENTS require_def
   70         | LEFTPAR . SITUATION situation_def
   71         | LEFTPAR . INIT init_def
   72         | LEFTPAR . GOAL goal_def
   73         | LEFTPAR . LENGTH length_def
   74         | LEFTPAR . TWODOTS DOMAIN NAME RIGHTPAR
   75         | LEFTPAR . OBJECTS list_name RIGHTPAR

    TWODOTS       shift, and go to state 52
    REQUIREMENTS  shift, and go to state 53
    INIT          shift, and go to state 54
    GOAL          shift, and go to state 55
    LENGTH        shift, and go to state 56
    SITUATION     shift, and go to state 57
    OBJECTS       shift, and go to state 58


State 26

   66 problem: LEFTPAR DEFINE LEFTPAR PROBLEM NAME RIGHTPAR $@4 list_def_prob RIGHTPAR .

    $default  reduce using rule 66 (problem)


State 27

   67 list_def_prob: list_def_prob def_prob .

    $default  reduce using rule 67 (list_def_prob)


State 28

   18 require_key: STRIPS .

    $default  reduce using rule 18 (require_key)


State 29

   20 require_key: EQUALITY .

    $default  reduce using rule 20 (require_key)


State 30

   21 require_key: CONDITIONAL .

    $default  reduce using rule 21 (require_key)


State 31

   22 require_key: DOM_AXIOMS .

    $default  reduce using rule 22 (require_key)


State 32

   23 require_key: DISJUNCTIVE .

    $default  reduce using rule 23 (require_key)


State 33

   24 require_key: ADL .

    $default  reduce using rule 24 (require_key)


State 34

   25 require_key: E_PRECONDITIONS .

    $default  reduce using rule 25 (require_key)


State 35

   26 require_key: U_PRECONDITIONS .

    $default  reduce using rule 26 (require_key)


State 36

   19 require_key: TYPING .

    $default  reduce using rule 19 (require_key)


State 37

   11 definition: REQUIREMENTS require_def .

    $default  reduce using rule 11 (definition)


State 38

   15 require_def: list_require_key . RIGHTPAR
   16 list_require_key: list_require_key . require_key

    RIGHTPAR         shift, and go to state 59
    STRIPS           shift, and go to state 28
    EQUALITY         shift, and go to state 29
    CONDITIONAL      shift, and go to state 30
    DOM_AXIOMS       shift, and go to state 31
    DISJUNCTIVE      shift, and go to state 32
    ADL              shift, and go to state 33
    E_PRECONDITIONS  shift, and go to state 34
    U_PRECONDITIONS  shift, and go to state 35
    TYPING           shift, and go to state 36

    require_key  go to state 60


State 39

   17 list_require_key: require_key .

    $default  reduce using rule 17 (list_require_key)


State 40

   29 list_name: NAME . list_name
   30          | NAME .

    NAME  shift, and go to state 40

    $default  reduce using rule 30 (list_name)

    list_name  go to state 61


State 41

   13 definition: CONSTANTS constants_def .

    $default  reduce using rule 13 (definition)


State 42

   28 constants_def: list_name . RIGHTPAR

    RIGHTPAR  shift, and go to state 62


State 43

   34 atomic_formula_var: LEFTPAR . predicate list_var RIGHTPAR

    NAME   shift, and go to state 63
    EQUAL  shift, and go to state 64

    predicate  go to state 65


State 44

   14 definition: PREDICATES predicates_def .

    $default  reduce using rule 14 (definition)


State 45

   31 predicates_def: list_atomic_formula_var . RIGHTPAR
   32 list_atomic_formula_var: list_atomic_formula_var . atomic_formula_var

    LEFTPAR   shift, and go to state 43
    RIGHTPAR  shift, and go to state 66

    atomic_formula_var  go to state 67


State 46

   33 list_atomic_formula_var: atomic_formula_var .

    $default  reduce using rule 33 (list_atomic_formula_var)


State 47

   12 definition: TYPES types_def .

    $default  reduce using rule 12 (definition)


State 48

   27 types_def: list_name . RIGHTPAR

    RIGHTPAR  shift, and go to state 68


State 49

    8 domain: LEFTPAR DEFINE LEFTPAR DOMAIN NAME RIGHTPAR $@1 LEFTPAR list_def $@2 . list_structure_def $@3 RIGHTPAR

    ACTION  shift, and go to state 69

    list_structure_def  go to state 70
    structure_def       go to state 71
    action_def          go to state 72


State 50

    9 list_def: list_def definition . LEFTPAR

    LEFTPAR  shift, and go to state 73


State 51

   10 list_def: definition LEFTPAR .

    $default  reduce using rule 10 (list_def)


State 52

   74 def_prob: LEFTPAR TWODOTS . DOMAIN NAME RIGHTPAR

    DOMAIN  shift, and go to state 74


State 53

   69 def_prob: LEFTPAR REQUIREMENTS . require_def

    STRIPS           shift, and go to state 28
    EQUALITY         shift, and go to state 29
    CONDITIONAL      shift, and go to state 30
    DOM_AXIOMS       shift, and go to state 31
    DISJUNCTIVE      shift, and go to state 32
    ADL              shift, and go to state 33
    E_PRECONDITIONS  shift, and go to state 34
    U_PRECONDITIONS  shift, and go to state 35
    TYPING           shift, and go to state 36

    require_def       go to state 75
    list_require_key  go to state 38
    require_key       go to state 39


State 54

   71 def_prob: LEFTPAR INIT . init_def

    $default  reduce using rule 54 (list_goal_description)

    list_goal_description  go to state 76
    init_def               go to state 77


State 55

   72 def_prob: LEFTPAR GOAL . goal_def

    LEFTPAR  shift, and go to state 78

    goal_description     go to state 79
    atomic_formula_term  go to state 80
    goal_def             go to state 81


State 56

   73 def_prob: LEFTPAR LENGTH . length_def

    $default  reduce using rule 81 (list_length_def_aux)

    length_def           go to state 82
    list_length_def_aux  go to state 83


State 57

   70 def_prob: LEFTPAR SITUATION . situation_def

    NAME  shift, and go to state 84

    situation_def  go to state 85


State 58

   75 def_prob: LEFTPAR OBJECTS . list_name RIGHTPAR

    NAME  shift, and go to state 40

    list_name  go to state 86


State 59

   15 require_def: list_require_key RIGHTPAR .

    $default  reduce using rule 15 (require_def)


State 60

   16 list_require_key: list_require_key require_key .

    $default  reduce using rule 16 (list_require_key)


State 61

   29 list_name: NAME list_name .

    $default  reduce using rule 29 (list_name)


State 62

   28 constants_def: list_name RIGHTPAR .

    $default  reduce using rule 28 (constants_def)


State 63

   37 predicate: NAME .

    $default  reduce using rule 37 (predicate)


State 64

   38 predicate: EQUAL .

    $default  reduce using rule 38 (predicate)


State 65

   34 atomic_formula_var: LEFTPAR predicate . list_var RIGHTPAR

    QUESTION  shift, and go to state 87

    $default  reduce using rule 36 (list_var)

    list_var  go to state 88
    variable  go to state 89


State 66

   31 predicates_def: list_atomic_formula_var RIGHTPAR .

    $default  reduce using rule 31 (predicates_def)


State 67

   32 list_atomic_formula_var: list_atomic_formula_var atomic_formula_var .

    $default  reduce using rule 32 (list_atomic_formula_var)


State 68

   27 types_def: list_name RIGHTPAR .

    $default  reduce using rule 27 (types_def)


State 69

   43 action_def: ACTION . NAME list_action_body RIGHTPAR

    NAME  shift, and go to state 90


State 70

    8 domain: LEFTPAR DEFINE LEFTPAR DOMAIN NAME RIGHTPAR $@1 LEFTPAR list_def $@2 list_structure_def . $@3 RIGHTPAR
   40 list_structure_def: list_structure_def . LEFTPAR structure_def

    LEFTPAR  shift, and go to state 91

    $default  reduce using rule 7 ($@3)

    $@3  go to state 92


State 71

   41 list_structure_def: structure_def .

    $default  reduce using rule 41 (list_structure_def)


State 72

   42 structure_def: action_def .

    $default  reduce using rule 42 (structure_def)


State 73

    9 list_def: list_def definition LEFTPAR .

    $default  reduce using rule 9 (list_def)


State 74

   74 def_prob: LEFTPAR TWODOTS DOMAIN . NAME RIGHTPAR

    NAME  shift, and go to state 93


State 75

   69 def_prob: LEFTPAR REQUIREMENTS require_def .

    $default  reduce using rule 69 (def_prob)


State 76

   53 list_goal_description: list_goal_description . goal_description
   77 init_def: list_goal_description . RIGHTPAR

    LEFTPAR   shift, and go to state 78
    RIGHTPAR  shift, and go to state 94

    goal_description     go to state 95
    atomic_formula_term  go to state 80


State 77

   71 def_prob: LEFTPAR INIT init_def .

    $default  reduce using rule 71 (def_prob)


State 78

   51 goal_description: LEFTPAR . AND list_goal_description RIGHTPAR
   52                 | LEFTPAR . NOT atomic_formula_term RIGHTPAR
   55 atomic_formula_term: LEFTPAR . predicate list_term RIGHTPAR

    NAME   shift, and go to state 63
    AND    shift, and go to state 96
    NOT    shift, and go to state 97
    EQUAL  shift, and go to state 64

    predicate  go to state 98


State 79

   78 goal_def: goal_description . RIGHTPAR

    RIGHTPAR  shift, and go to state 99


State 80

   50 goal_description: atomic_formula_term .

    $default  reduce using rule 50 (goal_description)


State 81

   72 def_prob: LEFTPAR GOAL goal_def .

    $default  reduce using rule 72 (def_prob)


State 82

   73 def_prob: LEFTPAR LENGTH length_def .

    $default  reduce using rule 73 (def_prob)


State 83

   79 length_def: list_length_def_aux . RIGHTPAR
   80 list_length_def_aux: list_length_def_aux . length_def_aux

    LEFTPAR   shift, and go to state 100
    RIGHTPAR  shift, and go to state 101

    length_def_aux  go to state 102


State 84

   76 situation_def: NAME . RIGHTPAR

    RIGHTPAR  shift, and go to state 103


State 85

   70 def_prob: LEFTPAR SITUATION situation_def .

    $default  reduce using rule 70 (def_prob)


State 86

   75 def_prob: LEFTPAR OBJECTS list_name . RIGHTPAR

    RIGHTPAR  shift, and go to state 104


State 87

   39 variable: QUESTION . NAME

    NAME  shift, and go to state 105


State 88

   34 atomic_formula_var: LEFTPAR predicate list_var . RIGHTPAR

    RIGHTPAR  shift, and go to state 106


State 89

   35 list_var: variable . list_var

    QUESTION  shift, and go to state 87

    $default  reduce using rule 36 (list_var)

    list_var  go to state 107
    variable  go to state 89


State 90

   43 action_def: ACTION NAME . list_action_body RIGHTPAR

    $default  reduce using rule 45 (list_action_body)

    list_action_body  go to state 108


State 91

   40 list_structure_def: list_structure_def LEFTPAR . structure_def

    ACTION  shift, and go to state 69

    structure_def  go to state 109
    action_def     go to state 72


State 92

    8 domain: LEFTPAR DEFINE LEFTPAR DOMAIN NAME RIGHTPAR $@1 LEFTPAR list_def $@2 list_structure_def $@3 . RIGHTPAR

    RIGHTPAR  shift, and go to state 110


State 93

   74 def_prob: LEFTPAR TWODOTS DOMAIN NAME . RIGHTPAR

    RIGHTPAR  shift, and go to state 111


State 94

   77 init_def: list_goal_description RIGHTPAR .

    $default  reduce using rule 77 (init_def)


State 95

   53 list_goal_description: list_goal_description goal_description .

    $default  reduce using rule 53 (list_goal_description)


State 96

   51 goal_description: LEFTPAR AND . list_goal_description RIGHTPAR

    $default  reduce using rule 54 (list_goal_description)

    list_goal_description  go to state 112


State 97

   52 goal_description: LEFTPAR NOT . atomic_formula_term RIGHTPAR

    LEFTPAR  shift, and go to state 113

    atomic_formula_term  go to state 114


State 98

   55 atomic_formula_term: LEFTPAR predicate . list_term RIGHTPAR

    NAME      shift, and go to state 115
    QUESTION  shift, and go to state 87

    $default  reduce using rule 57 (list_term)

    variable   go to state 116
    list_term  go to state 117
    term       go to state 118


State 99

   78 goal_def: goal_description RIGHTPAR .

    $default  reduce using rule 78 (goal_def)


State 100

   82 length_def_aux: LEFTPAR . SERIAL number RIGHTPAR
   83               | LEFTPAR . PARALLEL number RIGHTPAR

    SERIAL    shift, and go to state 119
    PARALLEL  shift, and go to state 120


State 101

   79 length_def: list_length_def_aux RIGHTPAR .

    $default  reduce using rule 79 (length_def)


State 102

   80 list_length_def_aux: list_length_def_aux length_def_aux .

    $default  reduce using rule 80 (list_length_def_aux)


State 103

   76 situation_def: NAME RIGHTPAR .

    $default  reduce using rule 76 (situation_def)


State 104

   75 def_prob: LEFTPAR OBJECTS list_name RIGHTPAR .

    $default  reduce using rule 75 (def_prob)


State 105

   39 variable: QUESTION NAME .

    $default  reduce using rule 39 (variable)


State 106

   34 atomic_formula_var: LEFTPAR predicate list_var RIGHTPAR .

    $default  reduce using rule 34 (atomic_formula_var)


State 107

   35 list_var: variable list_var .

    $default  reduce using rule 35 (list_var)


State 108

   43 action_def: ACTION NAME list_action_body . RIGHTPAR
   44 list_action_body: list_action_body . action_body

    RIGHTPAR      shift, and go to state 121
    PARAMETERS    shift, and go to state 122
    PRECONDITION  shift, and go to state 123
    EFFECT        shift, and go to state 124

    action_body  go to state 125


State 109

   40 list_structure_def: list_structure_def LEFTPAR structure_def .

    $default  reduce using rule 40 (list_structure_def)


State 110

    8 domain: LEFTPAR DEFINE LEFTPAR DOMAIN NAME RIGHTPAR $@1 LEFTPAR list_def $@2 list_structure_def $@3 RIGHTPAR .

    $default  reduce using rule 8 (domain)


State 111

   74 def_prob: LEFTPAR TWODOTS DOMAIN NAME RIGHTPAR .

    $default  reduce using rule 74 (def_prob)


State 112

   51 goal_description: LEFTPAR AND list_goal_description . RIGHTPAR
   53 list_goal_description: list_goal_description . goal_description

    LEFTPAR   shift, and go to state 78
    RIGHTPAR  shift, and go to state 126

    goal_description     go to state 95
    atomic_formula_term  go to state 80


State 113

   55 atomic_formula_term: LEFTPAR . predicate list_term RIGHTPAR

    NAME   shift, and go to state 63
    EQUAL  shift, and go to state 64

    predicate  go to state 98


State 114

   52 goal_description: LEFTPAR NOT atomic_formula_term . RIGHTPAR

    RIGHTPAR  shift, and go to state 127


State 115

   58 term: NAME .

    $default  reduce using rule 58 (term)


State 116

   59 term: variable .

    $default  reduce using rule 59 (term)


State 117

   55 atomic_formula_term: LEFTPAR predicate list_term . RIGHTPAR

    RIGHTPAR  shift, and go to state 128


State 118

   56 list_term: term . list_term

    NAME      shift, and go to state 115
    QUESTION  shift, and go to state 87

    $default  reduce using rule 57 (list_term)

    variable   go to state 116
    list_term  go to state 129
    term       go to state 118


State 119

   82 length_def_aux: LEFTPAR SERIAL . number RIGHTPAR

    INTEGER  shift, and go to state 130

    number  go to state 131


State 120

   83 length_def_aux: LEFTPAR PARALLEL . number RIGHTPAR

    INTEGER  shift, and go to state 130

    number  go to state 132


State 121

   43 action_def: ACTION NAME list_action_body RIGHTPAR .

    $default  reduce using rule 43 (action_def)


State 122

   46 action_body: PARAMETERS . LEFTPAR list_parameters RIGHTPAR

    LEFTPAR  shift, and go to state 133


State 123

   47 action_body: PRECONDITION . goal_description

    LEFTPAR  shift, and go to state 78

    goal_description     go to state 134
    atomic_formula_term  go to state 80


State 124

   48 action_body: EFFECT . effect

    LEFTPAR  shift, and go to state 135

    atomic_formula_term  go to state 136
    effect               go to state 137


State 125

   44 list_action_body: list_action_body action_body .

    $default  reduce using rule 44 (list_action_body)


State 126

   51 goal_description: LEFTPAR AND list_goal_description RIGHTPAR .

    $default  reduce using rule 51 (goal_description)


State 127

   52 goal_description: LEFTPAR NOT atomic_formula_term RIGHTPAR .

    $default  reduce using rule 52 (goal_description)


State 128

   55 atomic_formula_term: LEFTPAR predicate list_term RIGHTPAR .

    $default  reduce using rule 55 (atomic_formula_term)


State 129

   56 list_term: term list_term .

    $default  reduce using rule 56 (list_term)


State 130

   84 number: INTEGER .

    $default  reduce using rule 84 (number)


State 131

   82 length_def_aux: LEFTPAR SERIAL number . RIGHTPAR

    RIGHTPAR  shift, and go to state 138


State 132

   83 length_def_aux: LEFTPAR PARALLEL number . RIGHTPAR

    RIGHTPAR  shift, and go to state 139


State 133

   46 action_body: PARAMETERS LEFTPAR . list_parameters RIGHTPAR

    QUESTION  shift, and go to state 87

    $default  reduce using rule 36 (list_var)

    list_var         go to state 140
    variable         go to state 89
    list_parameters  go to state 141


State 134

   47 action_body: PRECONDITION goal_description .

    $default  reduce using rule 47 (action_body)


State 135

   55 atomic_formula_term: LEFTPAR . predicate list_term RIGHTPAR
   60 effect: LEFTPAR . AND list_effect RIGHTPAR
   61       | LEFTPAR . NOT atomic_formula_term RIGHTPAR

    NAME   shift, and go to state 63
    AND    shift, and go to state 142
    NOT    shift, and go to state 143
    EQUAL  shift, and go to state 64

    predicate  go to state 98


State 136

   62 effect: atomic_formula_term .

    $default  reduce using rule 62 (effect)


State 137

   48 action_body: EFFECT effect .

    $default  reduce using rule 48 (action_body)


State 138

   82 length_def_aux: LEFTPAR SERIAL number RIGHTPAR .

    $default  reduce using rule 82 (length_def_aux)


State 139

   83 length_def_aux: LEFTPAR PARALLEL number RIGHTPAR .

    $default  reduce using rule 83 (length_def_aux)


State 140

   49 list_parameters: list_var .

    $default  reduce using rule 49 (list_parameters)


State 141

   46 action_body: PARAMETERS LEFTPAR list_parameters . RIGHTPAR

    RIGHTPAR  shift, and go to state 144


State 142

   60 effect: LEFTPAR AND . list_effect RIGHTPAR

    $default  reduce using rule 64 (list_effect)

    list_effect  go to state 145


State 143

   61 effect: LEFTPAR NOT . atomic_formula_term RIGHTPAR

    LEFTPAR  shift, and go to state 113

    atomic_formula_term  go to state 146


State 144

   46 action_body: PARAMETERS LEFTPAR list_parameters RIGHTPAR .

    $default  reduce using rule 46 (action_body)


State 145

   60 effect: LEFTPAR AND list_effect . RIGHTPAR
   63 list_effect: list_effect . effect

    LEFTPAR   shift, and go to state 135
    RIGHTPAR  shift, and go to state 147

    atomic_formula_term  go to state 136
    effect               go to state 148


State 146

   61 effect: LEFTPAR NOT atomic_formula_term . RIGHTPAR

    RIGHTPAR  shift, and go to state 149


State 147

   60 effect: LEFTPAR AND list_effect RIGHTPAR .

    $default  reduce using rule 60 (effect)


State 148

   63 list_effect: list_effect effect .

    $default  reduce using rule 63 (list_effect)


State 149

   61 effect: LEFTPAR NOT atomic_formula_term RIGHTPAR .

    $default  reduce using rule 61 (effect)
